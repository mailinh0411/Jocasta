
@{
    ViewBag.Title = "Detail";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid">
    
    <div class="tab-content" id="nav-tabContent">
        <div class="order-detail">
            <div class="name-hotel" style="margin-bottom: 20px;display: flex; align-items: center;">
                <img style="width: 150px; height:100px;" src="/Content/img/logo.png" alt="logo">
                <h3 style="padding-left: 40px;">THE JOCASTA MAI LINH HOTEL</h3>
            </div>
           
            <div class="user-order">
                <div>
                    <h6>Họ và tên: <span class="user-name"></span></h6>
                    <h6>Số điện thoại: <span class="user-phone"></span></h6>
                    <h6>Email: <span class="user-email"></span></h6>
                </div>
                <div>
                    <h6>Mã hóa đơn: <span class="order-code"></span></h6>
                    <h6>Ngày đến: <span class="order-checkin"></span></h6>
                    <h6>Ngày đi: <span class="order-checkout"></span></h6>
                </div>
            </div>
            <div class="room-order">
                <h6>Các phòng đã đặt:</h6>
                <table class="table">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Loại phòng</th>
                            <th>Số lượng</th>
                        </tr>                        
                    </thead>
                    <tbody id="list-room-order">

                    </tbody>
                </table>
            </div>
            <div class="service-order">
                <h6>Các dịch vụ đã đặt:</h6>
                <table class="table">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Dịch vụ</th>
                            <th>Số lượng</th>
                            <th>Ngày đặt</th>
                        </tr>
                    </thead>
                    <tbody id="list-service-order">
                    </tbody>
                </table>
            </div>
            <div class="order-price"><h4>Tổng tiền: <span class="total-price">0</span> VNĐ</h4></div>
        </div>   
        
        <div style="display:flex; justify-content: flex-end; margin-top: 20px;">
            @*<button class="btn btn-info" onclick="ExportOrder();">In hóa đơn</button>*@
            <button class="btn btn-info" onclick="ExportPdfOrder();">In hóa đơn</button>
        </div>
    </div>
</div>



@section styles{
    <style>
        .order-detail{
            width: 60%;
            margin: auto;
            border: .5px solid black;
            background-color: #ffffff;
            padding: 30px;
        }

        .order-detail .user-order{
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .order-detail .room-order{
            margin-bottom: 20px;
        }

        .order-detail .service-order{
            margin-bottom: 20px;
        }

        .order-detail table{
            width: 100%;

        }

        .order-detail table thead{
            background-color: #f0dfca;
        }

        .order-detail table thead tr th{
            text-align: center;
        }

        .order-detail table tbody tr td{
            text-align: center;
            padding: 10px 0;
        }
    </style>
}
@section scripts{
    <script>

        const orderId = "@ViewBag.OrderId";

        const orderinfo = {
            Name: '',
            Phone: '',
            Email: '',
            Code: '',
            CheckIn: 0,
            CheckOut: 0,
            TotalPrice: 0
        };
        const listroombooked = [];
        const listservicebooked = [];

        const getUserOrder = async function () {
            let rp = await fetch('/api/AdminOrder/GetOrderById?id=' + orderId, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rp.json();
            if (AdminCheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                $('.user-order .user-name').html(GetObjectProperty(rs.data, 'Name'));
                $('.user-order .user-phone').html(GetObjectProperty(rs.data, 'Phone'));
                $('.user-order .user-email').html(GetObjectProperty(rs.data, 'Email'));
                $('.user-order .order-code').html(GetObjectProperty(rs.data, 'Code'));
                $('.user-order .order-checkin').html(DateStringFormat({ stringDate: new Date(rs.data.CheckIn), newFormat: 'mm/dd/yyyy' }));
                $('.user-order .order-checkout').html(DateStringFormat({ stringDate: new Date(rs.data.CheckOut), newFormat: 'mm/dd/yyyy' }));
                $('.order-price .total-price').html(NumberFormat(rs.data.TotalPrice));
                orderinfo.Name = rs.data.Name;
                orderinfo.Phone = rs.data.Phone;
                orderinfo.Email = rs.data.Email;
                orderinfo.Code = rs.data.Code;
                orderinfo.CheckIn = rs.data.CheckIn;
                orderinfo.CheckOut = rs.data.CheckOut;
                orderinfo.TotalPrice = rs.data.TotalPrice;
            }
        }

        const getListRoomOrder = async function () {
            let rp = await fetch('/api/AdminInvoice/GetListRoomBooked?orderId=' + orderId, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rp.json();
            if (AdminCheckErrorResponse(rs) === false) return;

            $('#list-room-order').html('');
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                let html = '';
                for (let i = 0; i < rs.data.length; i++) {
                    html += '<tr>';
                    html += `<td>${i + 1}</td>`;
                    html += `<td>${rs.data[i].Name}</td>`;
                    html += `<td>${rs.data[i].Quantity}</td>`;
                    html += '</tr>';
                    listroombooked.push(rs.data[i]);
                }
                $('#list-room-order').append(html);
            }
        }

        const getListServiceOrder = async function () {
            let rp = await fetch('/api/AdminInvoice/GetListServiceBooked?orderId=' + orderId, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rp.json();
            if (AdminCheckErrorResponse(rs) === false) return;

            $('#list-service-order').html('');
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                let html = '';
                if (rs.data.length === 0) $('.service-order').css('display', 'none');
                for (let i = 0; i < rs.data.length; i++) {
                    html += '<tr>';
                    html += `<td>${i + 1}</td>`;
                    html += `<td>${rs.data[i].Name}</td>`;
                    html += `<td>${rs.data[i].Quantity}</td>`;
                    html += `<td>${DateStringFormat({ stringDate: new Date(rs.data[i].CreateTime), newFormat: 'dd/mm/yyyy hh:mi:ss' }) }</td>`;
                    html += '</tr>';
                    listservicebooked.push(rs.data[i]);
                }
                $('#list-service-order').append(html);
            }
        }

        const initPage = async function () {
            await getUserOrder();
            await getListRoomOrder();
            await getListServiceOrder();
        }
        initPage();

        var ExportOrder = async function () {
            
            let model = {
                OrderInfo: orderinfo,
                ListRoomBookeds: listroombooked,
                ListServiceBookeds: listservicebooked
            };
            
            if (confirm("Xác nhận xuất hóa đơn !")) {
                let rq = await fetch('/api/AdminInvoice/ExportFileExcelOrder', {
                    method: 'POST',
                    headers: Enum.OptionAdminHeaderDefault,
                    body: JSON.stringify(model)
                });
                let rs = await rq.blob();
                var fileName = "Thông tin hóa đơn mã " + model.OrderInfo.Code + ".xlsx";
                if (window.navigator.msSaveOrOpenBlob) {
                    window.navigator.msSaveOrOpenBlob(rs, fileName);
                } else {
                    const a = document.createElement('a');
                    document.body.appendChild(a);
                    const url = window.URL.createObjectURL(rs);
                    a.href = url;
                    a.download = fileName;
                    a.click();
                    setTimeout(() => {
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    }, 0)
                }
                alert("Hóa đơn đang được tải xuống !");
            }
        }

        const ExportPdfOrder = async function () {
            let model = {
                OrderInfo: orderinfo,
                ListRoomBookeds: listroombooked,
                ListServiceBookeds: listservicebooked
            };

            if (confirm("Xác nhận xuất hóa đơn !")) {
                let rq = await fetch('/api/AdminInvoice/ExportPdf', {
                    method: 'POST',
                    headers: Enum.OptionAdminHeaderDefault,
                    body: JSON.stringify(model)
                });
                let rs = await rq.blob();
                var fileName = "Thông tin hóa đơn mã " + model.OrderInfo.Code + ".pdf";
                if (window.navigator.msSaveOrOpenBlob) {
                    window.navigator.msSaveOrOpenBlob(rs, fileName);
                } else {
                    const a = document.createElement('a');
                    document.body.appendChild(a);
                    const url = window.URL.createObjectURL(rs);
                    a.href = url;
                    a.download = fileName;
                    a.click();
                    setTimeout(() => {
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    }, 0)
                }
                alert("Hóa đơn đang được tải xuống !");
               
            }
        }
    </script>

}




