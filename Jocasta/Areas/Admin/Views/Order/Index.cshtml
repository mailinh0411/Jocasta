
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <h2>Quản lý đơn hàng</h2>
    </div>
    <div class=" d-block d-lg-flex align-items-center justify-content-between mb-5">
        <div class="coin-tabs input-group search-area2 w-50">
            <input id="keyword" type="text" class="form-control" placeholder="Tìm kiếm theo mã code hóa đơn hoặc email hoặc số điện thoại" onkeypress="searchKeyPress(event);">
            <button class="input-group-text" onclick="searchOrder()">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <div class="form-head d-sm-flex align-items-center mt-2 mt-lg-0">
            <select class="form-control default-select style-1 border w-auto ml-0" name="Status" onchange="Status_onChange();">
                <option value="">Chọn trạng thái</option>
            </select>
            @*<button class="btn btn-primary ms-sm-3 ms-0 mt-2 mt-sm-0" onclick="AddOrder_onClick();">Thêm mới</button>*@
        </div>
    </div>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="list" aria-labelledby="list-tab">
            <div class="tab-content" id="ListViewTabLinkContent">
                <div class="tab-pane fade active show" id="all-status" aria-labelledby="boxed-all-status-tab">
                    <div class="table-responsive card">
                        <div class="table-responsive">
                            <table class="table table-hover border-0 display mb-4 dataTablesCard booking-table table-responsive-lg " id="guestTable-all6">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Mã đơn đặt</th>
                                        <th>Người đặt</th>
                                        <th>Tổng tiền</th>
                                        <th>Ngày vào</th>
                                        <th>Ngày ra</th>
                                        <th>Ngày tạo</th>
                                        <th>Yêu cầu</th>
                                        <th>Trạng thái</th>
                                        <th>Thao tác</th>
                                        <th>Xem chi tiết</th>
                                    </tr>
                                </thead>

                                <tbody id="list-data">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="d-lg-flex justify-content-between" style="padding: 0 1.875rem 3rem 1.875rem;">
    <div class="form-inline" id="dynamic-table_length">
        <div class="d-lg-flex align-items-center">
            <div style="width: 50px;">Hiển thị </div>
            <select name="dynamic-table_length" aria-controls="dynamic-table" class="form-control input-sm" style="width: 60px; height: 35px; line-height:25px; margin-right:10px;" onchange="searchOrder();">
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
            </select>
            <div style="width: 100px;"> bản ghi </div>
        </div>
    </div>

    <div class="">
        <ul class="pagination pagination-circle mb-0" id="pagination">
        </ul>
    </div>
</div>

<div class="modal contentCancel" id="exampleModalCenter">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Lý do hủy</h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal" onclick="CloseModal_onClick();">
                </button>
            </div>
            <div class="modal-body">
                <input id="OrderId" value="" type="hidden" />

                <div class="form-group">
                    <label class="font-weight-semibold fs-16" for="content">Lý do</label>
                    <textarea class="form-control" aria-label="With textarea" style="resize:none; width: 400px;" placeholder="Nhập lý do hủy" rows="5" id="Content"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger light" data-bs-dismiss="modal" onclick="CloseModal_onClick();">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="SaveContentCancel_onClick();">Hủy đơn đặt</button>
            </div>
        </div>
    </div>
</div>


@section styles{
    <style>
        .popover_wrapper {
            position: relative;
            display: inline-block;
            width: 100%;
        }


            .popover_wrapper .popover_content {
                opacity: 0;
                visibility: hidden;
                position: absolute;
                left: -10px;
                top: 40px;
                transform: translate(0, 10px);
                padding: 10px;
                box-shadow: 0 2px 5px 0 rgba(0,0,0,0.26);
                width: 250px;
                font-size: 13px;
                border-radius: 5px;
                background-color: #f9eddd;
            }

                .popover_wrapper .popover_content:before {
                    position: absolute;
                    z-index: -1;
                    content: "";
                    right: calc(50%-10px);
                    top: -8px;
                    border-style: solid;
                    border-width: 0 10px 10px 10px;
                    border-color: transparent transparent #f9eddd transparent;
                    transition-duration: 0.3s;
                    transition-property: transform;
                }

        .popover_wrapper:hover .popover_content {
            z-index: 10;
            opacity: 1;
            visibility: visible;
            transform: translate(0, -20px);
            transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);
        }



        .note::-webkit-scrollbar {
            display: none;
        }

        .note {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
    </style>
}
@section scripts{
    <script>
        var ListStatusOrder = function () {
            var listKey = Object.keys(ENUM_STATUS_ORDER);
            var html = '';
            for (var i = 0; i < listKey.length; i++) {
                html += '<option value="' + listKey[i] + '">' + ENUM_STATUS_ORDER[listKey[i]] + '</option>';
            };
            $('select[name=Status]').html('<option value="">Chọn trạng thái</option>' + html);
        }

        const searchModel = {
            CurrentPage: 1,
            PageSize: $('[name=dynamic-table_length]').val(),
            Keyword: $('#keyword').val(),
            Status: $('[name=Status]').val(),
        };

        const searchOrder = function () {
            searchModel.CurrentPage = 1;
            searchModel.PageSize = $('[name=dynamic-table_length]').val();
            searchModel.Keyword = $('#keyword').val();
            searchModel.Status = $('select[name=Status]').val();

            getdataListOrder(searchModel);
        }

        const getdataListOrder = async function (searchModel) {
            let rq = await fetch('/api/AdminOrder/GetListOrder?keyword=' + searchModel.Keyword + '&status=' + searchModel.Status + '&page=' + searchModel.CurrentPage + '&pageSize=' + searchModel.PageSize, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();
            if (AdminCheckErrorResponse(rs) === false) return;

            console.log(rs);
            $('#list-data').html('');
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                let html = '';
                for (let i = 0; i < rs.data.List.length; i++) {
                    html += '<tr>';
                    html += '<td class="text-center"><span class="fs-15 font-w500 text-nowrap">' + (i + 1) + '</span></td>';
                    html += `<td><div><span class="fs-15 font-w500 text-nowrap">${rs.data.List[i].Code}</span></div></td>`;
                    html += `<td><div><span class="fs-15 font-w500 text-nowrap">${rs.data.List[i].Name}</span></div></td>`;
                    html += `<td><div><span class="fs-15 font-w500 text-nowrap">${NumberFormat(rs.data.List[i].TotalPrice)}</span></div></td>`;
                    html += `<td><div><span class="fs-15 font-w500 text-nowrap">${DateStringFormat({ stringDate: new Date(rs.data.List[i].CheckIn), newFormat: 'dd/mm/yyyy' })}</span></div></td>`;
                    html += `<td><div><span class="fs-15 font-w500 text-nowrap">${DateStringFormat({ stringDate: new Date(rs.data.List[i].CheckOut), newFormat: 'dd/mm/yyyy' })}</span></div></td>`;
                    html += `<td><div><span class="fs-15 font-w500 text-nowrap">${DateStringFormat({ stringDate: new Date(rs.data.List[i].CreateTime), newFormat: 'dd/mm/yyyy' })}</span></div></td>`;
                    var note = "";
                    if (rs.data.List[i].RequestContent === null || rs.data.List[i].RequestContent === '') {
                        note = "Không có yêu cầu."
                    } else {
                        note = rs.data.List[i].RequestContent;
                    }
                    html += `<td><div class="popover_wrapper"><a href="#" class="popover_title"> Nội dung </a>
                    <div class="popover_content"><div class="note">${note}</div></div></div></td>`;
                    switch (rs.data.List[i].Status) {
                        case "BOOKED":
                            html += `<td><div class="d-flex align-items-center"><i class="fa fa-circle text-success me-1"></i>Đã đặt</div></td>`;
                            html += `<td>`;
                            html += `<button class="btn btn-sm btn-success" style="margin-right:5px;" data-id="${rs.data.List[i].OrderId}" onclick = "CheckIn_onClick(this);">Check in</button>`;
                            html += `<button class="btn btn-sm btn-danger" style="margin-right:5px;" data-id="${rs.data.List[i].OrderId}" onclick="SystemCancel_onClick(this);">Hủy</button>`;
                            html += `</td>`;
                            break;
                        case "CHECKED_IN":
                            html += `<td><div class="d-flex align-items-center"><i class="fa fa-circle text-warning me-1"></i>Đã check in</div></td>`;
                            html += `<td>`;
                            html += `<button class="btn btn-sm btn-secondary" style="margin-right:5px;" data-id="${rs.data.List[i].OrderId}" onclick = "CheckOut_onClick(this);">Check out</button>`;
                            html += `</td>`;
                            break;
                        case "CHECKED_OUT":
                            html += `<td><div class="d-flex align-items-center"><i class="fa fa-circle text-secondary me-1"></i> Đã check out</div></td>`;
                            html += `<td>`;
                            html += `</td>`;

                            break;
                        case "USER_CANCEL":
                            html += `<td><div class="d-flex align-items-center"><i class="fa fa-circle text-danger me-1"></i>Người dùng hủy</div></td>`;
                            html += `<td>`;
                            html += `</td>`;
                            break;
                        case "SYSTEM_CANCEL":
                            html += `<td><div class="d-flex align-items-center"><i class="fa fa-circle text-danger me-1"></i> Hệ thống hủy</div></td>`;
                            html += `<td>`;
                            html += `</td>`;
                            break;
                    }

                    html += `<td><button class="btn btn-sm btn-primary" data-id="${rs.data.List[i].OrderId}" onclick="OrderDetail_onClick(this);">Chi tiết</button></td>`

                    html += `</tr>`;
                }

                $('#list-data').append(html);
                Pagination(searchModel, rs.data.TotalPage, null, getdataListOrder);
            }
        }

        const SystemCancel_onClick = async function (el) {
            var id = $(el).data('id');

            $('.contentCancel').css('display', 'flex');

            $('.contentCancel #OrderId').val(id);

            
        }

        const CloseModal_onClick = function () {
            $('.contentCancel').css('display', 'none');

            $('.contentCancel #Content').val ('');
        }

        const SaveContentCancel_onClick = async function () {
            let model = {
                OrderId: $('.contentCancel #OrderId').val(),
                Content: $('.contentCancel #Content').val()
            }

            let rq = await fetch('/api/AdminOrder/SystemCancelOrder', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });

            let rs = await rq.json();
            if (AdminCheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                //CloseModal_onClick();
                window.location.reload();
            }
        }

        const CheckIn_onClick = async function (el) {
            var id = $(el).data('id');
            let rq = await fetch('/api/AdminOrder/CheckInOrder?orderId=' + id, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();
            if (AdminCheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                window.location.reload();
            }
        }

        const CheckOut_onClick = async function (el) {
            var id = $(el).data('id');
            let rq = await fetch('/api/AdminOrder/CheckOutOrder?orderId=' + id, {
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();
            if (AdminCheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                window.location.reload();
            }
        }

        const Status_onChange = function () {
            searchModel.Status = $('select[name=Status]').val();

            searchOrder();
        }

        const OrderDetail_onClick = function (el) {
            let id = $(el).data('id');
            window.location.href = ('/admin/Order/Detail?id=' + id);
        }

        const searchKeyPress = function (event) {
            if (event.keyCode == 13) {
                searchOrder();
            }
        }

        const initPage = function () {
            searchOrder();
            ListStatusOrder();
        }


        initPage();

        const AddOrder_onClick = function () {
            window.location.href = ('/admin/Order/AddOrder');
        }

    </script>


}

