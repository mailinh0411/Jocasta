
@{
    Layout = null;
    ViewBag.Title = "Đăng ký";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/Content/img/favicon.png" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Barlow&amp;family=Barlow+Condensed&amp;family=Gilda+Display&amp;display=swap">
    <link rel="stylesheet" href="/Content/css/plugins.css" />
    <link rel="stylesheet" href="/Content/css/register.css">
    <link rel="stylesheet" href="/Content/fontawesome/css/all.css">
    <title>@ViewBag.Title</title>
</head>

<body>

    <div class="wrapper">
        <div class="form-box register">
            <h2>Đăng ký</h2>
            <div>
                <div class="input-box">
                    <span class="icon"></span>
                    <input type="text" id="Name" placeholder="Tên người dùng">
                </div>
                <div class="input-box">
                    <span class="icon"></span>
                    <input type="text" id="Account" placeholder="Tên đăng nhập">
                </div>
                <div class="input-box">
                    <span class="icon"></span>
                    <input type="email" id="Email" placeholder="Nhập email">
                </div>
                <div class="input-box">
                    <span class="icon" id="toggle" onclick="showPassword();"><i class="fas fa-eye-slash"></i></span>
                    <input type="password" id="password" placeholder="Nhập mật khẩu">
                    
                </div>
                @*<div class="remember-forgot">
                    <label for=""><input type="checkbox">I agree to the terms & conditions</label>
                </div>*@
                <button class="btn-register" onclick="Register_OnClick();">Đăng ký</button>
                <div class="login-register">
                    <p>
                        Đã có tài khoản?
                        <a href="/dang-nhap" class="login-link">Đăng nhập</a>
                    </p>
                </div>
            </div>
        </div>
    </div>

</body>
<script src="/Content/js/jquery-3.6.0.min.js"></script>
<script src="/Content/js/bootstrap.min.js"></script>
<script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
<script src="/Content/js/helper.js"></script>
<script>
    const password = document.getElementById('password');
    const toggle = document.getElementById('toggle');

    const showPassword = function () {
        $('#toggle').html('');
        let html = '';
        if (password.type === 'password') {
            password.setAttribute('type', 'text');
            html = '<i class="fas fa-eye"></i>';
        } else {
            password.setAttribute('type', 'password');
            html = '<i class="fas fa-eye-slash"></i>';
        }
        $('#toggle').append(html);
    }

    const Register_OnClick = async function () {
        let model = {
            Name: $('#Name').val(),
            Account: $('#Account').val(),
            Email: $('#Email').val(),
            Password: $('#password').val()
        }

        if (GetObjectProperty(model, 'Name') === '') { alert('Họ và tên người dùng không được để trống.'); return; }
        if (GetObjectProperty(model, 'Account') === '') { alert('Tên đăng nhập không được để trống.'); return; }
        if (GetObjectProperty(model, 'Email') === '') { alert('Email không được để trống.'); return; }
        if (!validateEmail(model.Email)) { alert('Email không đúng định dạng.'); return; }
        if (GetObjectProperty(model, 'Password') === '') { alert('Password không được để trống.'); return; }

        let rq = await fetch('/api/user/Register', {
            method: 'post',
            headers: Enum.OptionHeaderDefault,
            @*headers: {
                'Content-Type': 'application/json'
            },*@
            body: JSON.stringify(model)
        })
        let rs = await rq.json();

        console.log(rs);

        if (CheckErrorResponse(rs) === false) return;
        if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
            alert('Đăng ký thành công.')
            window.location.href = '/dang-nhap';
        }
    }

    function validateEmail($email) {
        var emailReg = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
        return emailReg.test($email);
    }
</script>

</html>
