
@{
    ViewBag.Title = "Đặt phòng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section slider{
    <!-- Header Banner -->
    <div class="banner-header section-padding valign bg-img bg-fixed" data-overlay-dark="4" data-background="/Content/img/slider/1.jpg">
        <div class="container">
            <div class="row">
                <div class="col-md-12 caption mt-90">
                    <h5>The Jocasta Mai Linh Hotel</h5>
                    <h1>Đặt phòng</h1>
                </div>
            </div>
            <div class="row sub-banner">
                <ul>
                    <li>
                        <a href="/Home/Index">Trang chủ</a>
                    </li>
                    <li>
                        <a class="select" href="">Đặt phòng</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
}
<!-- Booking Search -->
<section class="section-padding" data-scroll-index="1">
    <div class="container">
        <div class="section-title">Đặt Phòng</div>
        <div class="booking-inner clearfix">
            <div class="form1 clearfix">
                <div class="col1 c1">
                    <div class="input1_wrapper">
                        <label>Ngày đến</label>
                        <div class="input1_inner">
                            @*<input type="text" class="form-control input datepicker" id="check-in" value="@ViewBag.CheckIn" placeholder="Check in">*@
                            <input type="text" class="form-control input datepicker" id="check-in" value="" placeholder="Ngày đến">
                        </div>
                    </div>
                </div>
                <div class="col1 c2">
                    <div class="input1_wrapper">
                        <label>Ngày đi</label>
                        <div class="input1_inner">
                            @*<input type="text" class="form-control input datepicker" id="check-out" value="@ViewBag.CheckOut" placeholder="Check out">*@
                            <input type="text" class="form-control input datepicker" id="check-out" value="" placeholder="Ngày đi">
                        </div>
                    </div>
                </div>
                <div class="col2 c3">
                    <div class="input1_wrapper">
                        <label>Người lớn</label>
                        <div class="input_inner">
                            <input type="text" class="input" placeholder="Người lớn">
                        </div>
                    </div>
                </div>
                <div class="col2 c4">
                    <div class="input1_wrapper">
                        <label>Trẻ em</label>
                        <div class="input_inner">
                            <input type="text" class="input" placeholder="Trẻ em">
                        </div>
                    </div>
                </div>
                <div class="col2 c5">
                    @*<input type="text" id="txtRoomCategoryId" value="@ViewBag.RoomCategory" hidden />*@
                    <div class="select_wrapper">
                        <label>Loại phòng</label>
                        <div class="select_inner">
                            <select class="select2 select" id="select-room-category" style="width: 100%">
                                <option value="">Loại phòng</option>
                            </select>
                        </div>
                    </div>

                </div>
                <div class="col3 c6">
                    <button type="submit" class="btn-form1-submit" onclick="CheckNow_onclick();">Tìm kiếm</button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Book Now -->
<section class="book-now">
    <div class="container">
        <div class="row">
            <div class="col-md-8" style="position: relative;">
                <div class="loader"></div>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th style="width: 30%;">Loại phòng</th>
                            <th>Phù hợp cho</th>
                            <th style="width: 15%;">Giá Phòng</th>
                            <th style="width: 20%;">Số lượng phòng trống</th>
                            <th>Số Phòng</th>
                            <th>Extra bed</th>
                        </tr>
                    </thead>
                    <tbody id="list-count-roomcategory">
                    </tbody>
                </table>
            </div>
            <div class="col-md-4">
                <div class="booking-box">
                    <div class="title-list-room"><span>DANH SÁCH PHÒNG ĐẶT</span></div>
                    <div class="list-room">
                        <table>
                            <tbody id="list-room-book">
                            </tbody>
                        </table>
                    </div>
                    <button class="btn btn-form1-submit " onclick="bookNow_onClick();">Đặt phòng</button>
                </div>
            </div>
        </div>
    </div>
</section>


@section styles{
    <style>
        .input_inner input {
            display: block;
            width: 100%;
            font-size: 15px;
            color: #222;
            padding: 20px 40px 20px 20px;
            background: #fff;
            border: none;
            box-shadow: none;
            border-radius: 0;
        }

        .select2 {
            height: 62.5px !important;
        }

        .section-padding {
            padding: 40px 0;
        }

        .image-room-book {
            width: 50px;
            height: 30px;
            margin-right: 20px;
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .loader {
            position: absolute;
            border: 5px solid #f3f3f3;
            border-radius: 50%;
            border-top: 5px solid #aa8453;
            width: 50px;
            height: 50px;
            -webkit-animation: spin 2s linear infinite; /* Safari */
            animation: spin 2s linear infinite;
            display: none;
            margin: 120px auto;
        }

        /* Safari */
        @@-webkit-keyframes spin {
          0% { -webkit-transform: rotate(0deg); }
          100% { -webkit-transform: rotate(360deg); }
        }

        @@keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
    </style>
}

@section scripts{
    <script>
        let ListRoomBook = [];

        const getCartUser = async function () {
            let rq = await fetch('/api/Cart/GetCartByUser', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;


            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                if (rs.data !== null) {
                    $('#check-in').val(DateStringFormat({ stringDate: new Date(rs.data.CheckIn), newFormat: 'mm/dd/yyyy' }));
                    $('#check-out').val(DateStringFormat({ stringDate: new Date(rs.data.CheckOut), newFormat: 'mm/dd/yyyy' }));
                }
            }
        }

        const getListRoomCategory = async function () {
            let rq = await fetch('/api/RoomCategory/GetListRoomCategory', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;


            $('#select-room-category').html('');

            let html = '';

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                html += '<option class="option-room" value="">Loại phòng</option>'
                for (let i = 0; i < rs.data.length; i++) {
                    html += `<option class="option-room" value="${rs.data[i].RoomCategoryId}">${rs.data[i].Name}</option>`
                }
                $('#select-room-category').append(html);
            }
        }

        const CheckNow_onclick = async function () {
            $('.loader').css('display', 'block');
            let model = {
                CheckIn: $('#check-in').val(),
                CheckOut: $('#check-out').val(),
                RoomCategory: $('#select-room-category').val()
            }

            if (model.CheckIn > model.CheckOut) {
                alert("Ngày check in phải nhỏ hơn ngày check out.");
                return;
            }

            if (GetObjectProperty(model, 'CheckIn') === '') { alert('Ngày check in không được để trống'); return; }
            if (GetObjectProperty(model, 'CheckOut') === '') { alert('Ngày check out không được để trống'); return; }

            let rq = await fetch('/api/Order/GetListRoom?checkIn=' + model.CheckIn + '&checkOut=' + model.CheckOut + '&keyword=' + model.RoomCategory, {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;


            $('#list-count-roomcategory').html('');

            let html = '';

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                console.log(rs);
                for (let i = 0; i < rs.data.length; i++) {
                    html += `<tr class="choose-room">`;
                    html += `<td><div class="room-name">${rs.data[i].RoomAvaiable.Category.Name}</div>`;
                    html += `<div class="img-room"><img style="width: 140px; height: 100px;" src="${rs.data[i].RoomAvaiable.Category.Image}" alt=""></div></td>`;
                    html += `<td><i class="ti-user"></i> x ${rs.data[i].RoomAvaiable.Category.NumberOfPeople}</td>`;
                    html += `<td><div class="price-room"><span>${NumberFormat(rs.data[i].RoomAvaiable.Category.Price)}</span><br> VNĐ/đêm</div></td>`;
                    html += `<td><div class="price-room"><span>${rs.data[i].RoomAvaiable.ListRoom.length}</span></div></td>`;
                    html += `<td><div class="input-group input-group-number"><span class="input-group-btn">`;
                    html += `<input type="number" class="form-control input-number" id="count-room" data-id="${rs.data[i].RoomAvaiable.Category.RoomCategoryId}" data-name="${rs.data[i].RoomAvaiable.Category.Name}" data-image="${rs.data[i].RoomAvaiable.Category.Image}" value="${rs.data[i].CountSelect}" min="0" max="${rs.data[i].RoomAvaiable.ListRoom.length}" onchange="countRoom_onChange(event,this);">`;
                    html += `</span></div></td>`;
                    html += `<td><div class="input-group input-group-number"><span class="input-group-btn">`;
                    html += `<input type="number" class="form-control input-number" id="count-extrabed" data-id="${rs.data[i].RoomAvaiable.Category.RoomCategoryId}" value="${rs.data[i].CountExtraBed}" min="0" max="${rs.data[i].CountSelect}" onchange="countExtraBed_onChange(this);">`;
                    html += `</span></div></td>`;
                    html += `</tr>`;
                }
                $('#list-count-roomcategory').append(html);
                $('.loader').css('display', 'none');
            }
        }

        const getListRoomBooked = async function () {
            $('#list-room-book').html('');

            let rq = await fetch('/api/Cart/GetListRoomBookedByUser', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                let html = '';
                for (let i = 0; i < rs.data.length; i++) {
                    html += `<tr><td>`;
                    html += `<input id="roomCategoryBookId" value="${GetObjectProperty(rs.data[i], 'RoomCategoryId')}" hidden />`;
                    html += `<div class="image-room-book" style="background-image: url(${GetObjectProperty(rs.data[i], 'Image')})"></div></td>`;
                    html += `<td>${GetObjectProperty(rs.data[i], 'Name')}</td>`;
                    html += `<td>x${GetObjectProperty(rs.data[i], 'Quantity')}</td>`;
                    html += `<td>x${GetObjectProperty(rs.data[i], 'Quantity')}</td>`;
                }
                $('#list-room-book').append(html);

                ListRoomBook = [];
                const tableRow = $('#list-room-book tr');
                for (let i = 0; i < tableRow.length; i++) {
                    const row = $(tableRow[i]);
                    const id = $(row).find('input#roomCategoryBookId').val();
                    ListRoomBook.push(id);
                }
            }
        }

        var _delaySearch = null;
        const countRoom_onChange = async function (e, el) {
            var id = $(el).data('id');
            var maxCount = $(el).attr("max");
            var count = $(el).val();

            if (parseInt(count) > parseInt(maxCount)) {
                alert('Số phòng không được lớn hơn số phòng trống.');
                $(el).val(0);
                return;
            }

            // Gán max cho số lượng extra bed
            $(el).closest('.choose-room').find('#count-extrabed').attr("max", count);
            //$('#count-extrabed').attr("max", count);
            console.log($('#count-extrabed').attr("max"));
            console.log(maxCount);
            
            let model = {
                RoomCategoryId: id,
                Quantity: count
            }

            clearTimeout(_delaySearch);
            _delaySearch = setTimeout(async function () {
                const rp = await fetch('/api/cart/InsertCartDetail', {
                    method: 'post',
                    headers: Enum.OptionHeaderDefault,
                    body: JSON.stringify(model)
                });
                let rs = await rp.json();

                if (rs.status === 'error') if (rs.message !== '' && rs.message !== null) alert(rs.message);
                if (rs.status === 'success') {
                    if (rs.message !== '' && rs.message !== null) alert(rs.message);
                    getListRoomBooked();
                }
            }, 1000)
        }

        const countExtraBed_onChange = async function (el) {
            var maxCount = $(el).attr('max');
            var count = $(el).val();

            if (parseInt(count) > parseInt(maxCount)) {
                alert('Số extra bed không được lớn hơn số phòng ở.');
                $(el).val(0);
                return;
            }

            let model = {
                RoomCategoryId: id,
                ExtraBed: count
            }

            const rp = await fetch('/api/cart/UpdateCartDetail', {
                method: 'post',
                headers: Enum.OptionHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rp.json();

            if (rs.status === 'error') if (rs.message !== '' && rs.message !== null) alert(rs.message);
            if (rs.status === 'success') {
                if (rs.message !== '' && rs.message !== null) alert(rs.message);
                getListRoomBooked();
            }
        }

        const bookNow_onClick = async function () {
            if (ListRoomBook.length <= 0) {
                alert("Bạn phải chọn phòng.");
                return;
            }

            window.location.href = '/book-now';

        }

        const initPage = async function () {
            await getCartUser();
            await getListRoomCategory();
            await getListRoomBooked();
            /*var roomCategoryId = $('#txtRoomCategoryId').val();
            await $('#select-room-category').val(roomCategoryId);
            console.log(roomCategoryId);
            var id = $('#select-room-category').val();
            var nameRoom = $('#select-room-category').text();*/
            //$('.select2-results__option[aria-selected="true"]').text()
            //$('#select2-select-room-category-container').text(nameRoom)
            /*console.log(id);
            console.log(nameRoom);*/
            console.log($('#check-in').val());
            /*if (($('#check-in').val() !== null || $('#check-in').val() !== '') && ($('#check-out').val() !== null || $('#check-out').val() !== '')) {
                await CheckNow_onclick();
            }*/
            if ($('#check-in').val() !== '' || $('#check-out').val() !== '') {
                await CheckNow_onclick();
            }
        }
        initPage();

    </script>
}

